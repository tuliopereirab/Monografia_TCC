@book{Lutz2007,
address = {Sebastopol, CA, USA},
author = {Lutz, Mark},
edition = {3},
editor = {Apandi, Tatiana},
file = {:C$\backslash$:/Users/Tulio/Downloads/Learning python, third edition.4205.pdf:pdf},
isbn = {0-596-51398-4, 978-0-596-51398-6},
number = {1},
publisher = {O'Reilly Media, Inc.},
title = {{Learning Python: Powerful Object-Oriented Programming}},
year = {2007}
}
@article{Cock2009,
abstract = {The Biopython Project is an international association of developers of freely available Python (http://www.python.org) tools for computational molecular biology. The web site http://www.biopython.org provides an online resource for modules, scripts, and web links for developers of Python-based software for life science research.},
annote = {Bio},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Cock, P. J. A. and Antao, Tiago and Chang, Jeffrey T. and Chapman, Brad A. and Cox, Cymon J. and Dalke, Andrew and Friedberg, Iddo and Hamelryck, Thomas and Kauff, Frank and Wilczynski, Bartek and de Hoon, M. J. L.},
doi = {10.1093/bioinformatics/btp163},
eprint = {arXiv:1011.1669v3},
file = {:C$\backslash$:/Users/Tulio/Downloads/btp163.pdf:pdf},
isbn = {1367-4811 (Electronic)$\backslash$r1367-4803 (Linking)},
issn = {1367-4803},
journal = {Bioinformatics},
month = {jun},
number = {11},
pages = {1422--1423},
pmid = {19304878},
title = {{Biopython: freely available Python tools for computational molecular biology and bioinformatics}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btp163},
volume = {25},
year = {2009}
}
@article{Sukumaran2010,
abstract = {DendroPy is a cross-platform library for the Python programming language that provides for object-oriented reading, writing, simulation and manipulation of phylogenetic data, with an emphasis on phylogenetic tree operations. DendroPy uses a splits-hash mapping to perform rapid calculations of tree distances, similarities and shape under various metrics. It contains rich simulation routines to generate trees under a number of different phylogenetic and coalescent models. DendroPy's data simulation and manipulation facilities, in conjunction with its support of a broad range of phylogenetic data formats (NEXUS, Newick, PHYLIP, FASTA, NeXML, etc.), allow it to serve a useful role in various phyloinformatics and phylogeographic pipelines. Availability: The stable release of the library is available for download and automated installation through the Python Package Index site (http://pypi.python.org/pypi/DendroPy), while the active development source code repository is available to the public from GitHub (http://github.com/jeetsukumaran/DendroPy).},
annote = {Bio},
author = {Sukumaran, Jeet and Holder, Mark T.},
doi = {10.1093/bioinformatics/btq228},
file = {:C$\backslash$:/Users/Tulio/Downloads/btq228.pdf:pdf},
isbn = {1367-4811 (Linking)},
issn = {1367-4803},
journal = {Bioinformatics},
month = {jun},
number = {12},
pages = {1569--1571},
pmid = {20421198},
title = {{DendroPy: a Python library for phylogenetic computing}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btq228},
volume = {26},
year = {2010}
}
@article{Anders2015,
abstract = {MOTIVATION: A large choice of tools exists for many standard tasks in the analysis of high-throughput sequencing (HTS) data. However, once a project deviates from standard work flows, custom scripts are needed.$\backslash$n$\backslash$nRESULTS: We present HTSeq, a Python library to facilitate the rapid development of such scripts. HTSeq offers parsers for many common data formats in HTS projects, as well as classes to represent data such as genomic coordinates, sequences, sequencing reads, alignments, gene model information, variant calls, and provides data structures that allow for querying via genomic coordinates. We also present htseq-count, a tool developed with HTSeq that preprocesses RNA-Seq data for differential expression analysis by counting the overlap of reads with genes. Availability: HTSeq is released as open-source software under the GNU General Public Licence and available from http://www-huber.embl.de/HTSeq or from the Python Package Index https://pypi.python.org/pypi/HTSeq.$\backslash$n$\backslash$nCONTACT: sanders@fs.tum.de.},
annote = {Bio},
archivePrefix = {arXiv},
arxivId = {http://biorxiv.org/content/early/2014/08/19/002824},
author = {Anders, Simon and Pyl, Paul Theodor and Huber, Wolfgang},
doi = {10.1093/bioinformatics/btu638},
eprint = {/biorxiv.org/content/early/2014/08/19/002824},
file = {:C$\backslash$:/Users/Tulio/Downloads/btu638.pdf:pdf},
isbn = {1367-4811 (Electronic) 1367-4803 (Linking)},
issn = {1367-4803},
journal = {Bioinformatics},
month = {jan},
number = {2},
pages = {166--169},
pmid = {25260700},
primaryClass = {http:},
title = {{HTSeq--a Python framework to work with high-throughput sequencing data}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btu638},
volume = {31},
year = {2015}
}
@article{Beyreuther2010,
abstract = {The wide variety of computer platforms, file formats, and methods to access seismological data often requires consider- able effort in preprocessing such data. Although preprocessing work-flows are mostly very similar, few software standards exist to accomplish this task. The objective of ObsPy is to provide a Python toolbox that simplifies the usage of Python program- ming for seismologists. It is conceptually similar to SEATREE (Milner and Thorsten 2009) or the exploration seismic software project MADAGASCAR (http://www.reproducibility.org). In ObsPy the following essential seismological processing routines are implemented and ready to use: reading and writ- ing data only SEED/MiniSEED and Dataless SEED (http:// www.iris.edu/manuals/SEEDManual{\_}V2.4.pdf), XML-SEED (Tsuboi et al. 2004), GSE2 (http://www.seismo.ethz.ch/auto- drm/downloads/provisional{\_}GSE2.1.pdf) and SAC (http:// www.iris.edu/manuals/sac/manual.html), as well as filtering, instrument simulation, triggering, and plotting. There is also support to retrieve data from ArcLink (a distributed data request protocol for accessing archived waveform data, see Hanka and Kind 1994) or a SeisHub database (Barsch 2009). Just recently, modules were added to read SEISAN data files (Havskov and OttemoÌˆller 1999) and to retrieve data with the IRIS/FISSURES data handling interface (DHI) protocol (Malone 1997).},
annote = {Sismologia},
author = {Beyreuther, M. and Barsch, R. and Krischer, L. and Megies, T. and Behr, Y. and Wassermann, J.},
doi = {10.1785/gssrl.81.3.530},
file = {:C$\backslash$:/Users/Tulio/Downloads/530.pdf:pdf},
isbn = {1938-2057},
issn = {0895-0695},
journal = {Seismological Research Letters},
month = {may},
number = {3},
pages = {530--533},
title = {{ObsPy: A Python Toolbox for Seismology}},
url = {http://srl.geoscienceworld.org/cgi/doi/10.1785/gssrl.81.3.530 https://pubs.geoscienceworld.org/srl/article/81/3/530-533/143693},
volume = {81},
year = {2010}
}
@misc{MathWorks2015,
author = {MathWorks},
title = {{MATLAB API for Python}},
url = {http://www.mathworks.com/help/matlab/matlab-engine-for-python.html},
urldate = {16/10/2018},
year = {2015}
}
@article{Huerta-Cepas2010,
abstract = {BACKGROUND: Many bioinformatics analyses, ranging from gene clustering to phylogenetics, produce hierarchical trees as their main result. These are used to represent the relationships among different biological entities, thus facilitating their analysis and interpretation. A number of standalone programs are available that focus on tree visualization or that perform specific analyses on them. However, such applications are rarely suitable for large-scale surveys, in which a higher level of automation is required. Currently, many genome-wide analyses rely on tree-like data representation and hence there is a growing need for scalable tools to handle tree structures at large scale.$\backslash$n$\backslash$nRESULTS: Here we present the Environment for Tree Exploration (ETE), a python programming toolkit that assists in the automated manipulation, analysis and visualization of hierarchical trees. ETE libraries provide a broad set of tree handling options as well as specific methods to analyze phylogenetic and clustering trees. Among other features, ETE allows for the independent analysis of tree partitions, has support for the extended newick format, provides an integrated node annotation system and permits to link trees to external data such as multiple sequence alignments or numerical arrays. In addition, ETE implements a number of built-in analytical tools, including phylogeny-based orthology prediction and cluster validation techniques. Finally, ETE's programmable tree drawing engine can be used to automate the graphical rendering of trees with customized node-specific visualizations.$\backslash$n$\backslash$nCONCLUSIONS: ETE provides a complete set of methods to manipulate tree data structures that extends current functionality in other bioinformatic toolkits of a more general purpose. ETE is free software and can be downloaded from http://ete.cgenomics.org.},
author = {Huerta-Cepas, Jaime and Dopazo, Joaqu{\'{i}}n and Gabald{\'{o}}n, Toni},
doi = {10.1186/1471-2105-11-24},
file = {:C$\backslash$:/Users/Tulio/Downloads/1471-2105-11-24.pdf:pdf},
isbn = {1471-2105},
issn = {14712105},
journal = {BMC Bioinformatics},
pmid = {20070885},
title = {{ETE: A python Environment for Tree Exploration}},
volume = {11},
year = {2010}
}
@book{Grus2015,
author = {Grus, Joel},
edition = {1},
file = {:C$\backslash$:/Users/Tulio/Downloads/Data{\_}Science{\_}from{\_}Scratch.pdf:pdf},
isbn = {149190142X,9781491901427},
publisher = {O'Reilly Media, Inc.},
title = {{Data Science from Scratch: First Principles with Python}},
year = {2015}
}
@article{Peirce2007,
abstract = {The vast majority of studies into visual processing are conducted using computer display technology. The current paper describes a new free suite of software tools designed to make this task easier, using the latest advances in hardware and software. PsychoPy is a platform-independent experimental control system written in the Python interpreted language using entirely free libraries. PsychoPy scripts are designed to be extremely easy to read and write, while retaining complete power for the user to customize the stimuli and environment. Tools are provided within the package to allow everything from stimulus presentation and response collection (from a wide range of devices) to simple data analysis such as psychometric function fitting. Most importantly, PsychoPy is highly extensible and the whole system can evolve via user contributions. If a user wants to add support for a particular stimulus, analysis or hardware device they can look at the code for existing examples, modify them and submit the modifications back into the package so that the whole community benefits.},
author = {Peirce, Jonathan W.},
doi = {10.1016/j.jneumeth.2006.11.017},
file = {:C$\backslash$:/Users/Tulio/Downloads/1-s2.0-S0165027006005772-main.pdf:pdf},
isbn = {0165-0270 (Print)$\backslash$r0165-0270 (Linking)},
issn = {0165-0270},
journal = {Journal of neuroscience methods},
keywords = {Psychometric,Psychophysics,Software,Stimulus presentation,Vision},
month = {may},
number = {1-2},
pages = {8--13},
pmid = {17254636},
publisher = {Elsevier B.V.},
title = {{PsychoPy--Psychophysics software in Python.}},
url = {http://dx.doi.org/10.1016/j.jneumeth.2006.11.017 http://linkinghub.elsevier.com/retrieve/pii/S0165027006005772 http://www.ncbi.nlm.nih.gov/pubmed/17254636 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC2018741},
volume = {162},
year = {2007}
}
@article{Bos2011,
abstract = {This specification defines Cascading Style Sheets, level 2 revision 1 (CSS 2.1). CSS 2.1 is a style sheet language that allows authors and users to attach style (e.g., fonts and spacing) to structured documents (e.g., HTML documents and XML applications). By separating the presentation style of documents from the content of documents, CSS 2.1 simplifies Web authoring and site maintenance. CSS 2.1 builds on CSS2 CSS2 which builds on CSS1 CSS1. It supports media-specific style sheets so that authors may tailor the presentation of their documents to visual browsers, aural devices, printers, braille devices, handheld devices, etc. It also supports content positioning, table layout, features for internationalization and some properties related to user interface. CSS 2.1 corrects a few errors in CSS2 (the most important being a new definition of the height/width of absolutely positioned elements, more influence for HTML's "style" attribute and a new calculation of the 'clip' property), and adds a few highly requested features which have already been widely implemented. But most of all CSS 2.1 represents a "snapshot" of CSS usage: it consists of all CSS features that are implemented interoperably at the date of publication of the Recommendation. CSS 2.1 is derived from and is intended to replace CSS2. Some parts of CSS2 are unchanged in CSS 2.1, some parts have been altered, and some parts removed. The removed portions may be used in a future CSS3 specification. Future specs should refer to CSS 2.1 (unless they need features from CSS2 which have been dropped in CSS 2.1, and then they should only reference CSS2 for those features, or preferably reference such feature(s) in the respective CSS3 Module that includes those feature(s)).},
author = {Bos, Bert and {\c{C}}elik, Tantek and Hickson, Ian and Lie, H{\aa}kon Wium},
file = {:C$\backslash$:/Users/Tulio/Downloads/css2.pdf:pdf},
isbn = {0596527330},
journal = {Policy},
number = {February},
pages = {1--425},
title = {{Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification}},
url = {http://www.w3.org/TR/CSS2/},
volume = {1},
year = {2011}
}
@book{Flanagan2006,
address = {Sebastopol, CA, USA},
author = {Flanagan, David},
edition = {5th},
editor = {Cameron, Debra},
isbn = {978-0-596-10199-2},
publisher = {O'Reilly Media, Inc.},
title = {{Javascript: The Definitive Guide}},
url = {https://books.google.com.br/books?hl=pt-BR{\&}lr={\&}id=k0CbAgAAQBAJ{\&}oi=fnd{\&}pg=PT6{\&}dq=javascript+documentation{\&}ots=O3oAlqfBsY{\&}sig=E9GwNxy99-z6D-IIBBPVLEX5sM8{\#}v=onepage{\&}q{\&}f=false},
year = {2006}
}
@book{Forcier2008,
annote = {Web},
author = {Forcier, Jeff and Bissex, Paul and Chun, Wesley J.},
publisher = {Addison-Wesley Professional},
title = {{Python web development with Django}},
url = {https://books.google.com.br/books?hl=pt-BR{\&}lr={\&}id=M2D5nnYlmZoC{\&}oi=fnd{\&}pg=PT31{\&}dq=python+web+applications{\&}ots=vYVMJw9OLT{\&}sig=KmAV8kjj3zo4r0iMlh9S7g9kPUU{\#}v=onepage{\&}q=python web applications{\&}f=false},
year = {2008}
}
@article{Pedregosa2012,
abstract = {Scikit-learn is a Python module integrating a wide range of state-of-the-art machine learning algorithms for medium-scale supervised and unsupervised problems. This package focuses on bringing machine learning to non-specialists using a general-purpose high-level language. Emphasis is put on ease of use, performance, documentation, and API consistency. It has minimal dependencies and is distributed under the simplified BSD license, encouraging its use in both academic and commercial settings. Source code, binaries, and documentation can be downloaded from http://scikit-learn.sourceforge.net.},
annote = {Machine Learning},
archivePrefix = {arXiv},
arxivId = {1201.0490},
author = {Pedregosa, Fabian and Varoquaux, Ga{\"{e}}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, {\'{E}}douard},
doi = {10.1007/s13398-014-0173-7.2},
eprint = {1201.0490},
file = {:C$\backslash$:/Users/Tulio/Downloads/pedregosa11a.pdf:pdf},
isbn = {1532-4435},
issn = {15324435},
journal = {Journal of Machine Learning Research},
pages = {2825--2830},
pmid = {1000044560},
title = {{Scikit-learn: Machine Learning in Python}},
url = {http://dl.acm.org/citation.cfm?id=2078195{\%}5Cnhttp://arxiv.org/abs/1201.0490},
volume = {12},
year = {2012}
}
@book{Lloyd2008,
author = {Lloyd, Ian},
isbn = {0980285887, 9780980285888},
publisher = {Sitepoint},
title = {{The Ultimate HTML Reference}},
url = {https://dl.acm.org/citation.cfm?id=1386512},
year = {2008}
}
@book{Grand1997,
address = {Sebastopol, CA, USA},
author = {Grand, Mark},
edition = {2nd},
isbn = {1-56592-326-X},
publisher = {O'Reilly {\&} Associates, Inc.},
title = {{Java Language Reference}},
url = {https://dl.acm.org/citation.cfm?id=265755},
year = {1997}
}
@book{Watters1996,
address = {New York, New York, USA},
annote = {Utilizado para a sita{\c{c}}{\~{a}}o do Python possuir grande portabilidade.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Watters, Aaron and Ahlstrom, James C. and Rossum, Guido Van},
isbn = {1558514848},
publisher = {Henry Holt and Co., Inc.},
title = {{Internet Programming With Python}},
year = {1996}
}
@article{Dubois1996,
abstract = {Predicting the binding mode of flexible polypeptides to proteins is an important task that falls outside the domain of applicability of most small molecule and proteinâˆ’protein docking tools. Here, we test the small molecule flexible ligand docking program Glide on a set of 19 non-$\alpha$-helical peptides and systematically improve pose prediction accuracy by enhancing Glide sampling for flexible polypeptides. In addition, scoring of the poses was improved by post-processing with physics-based implicit solvent MM- GBSA calculations. Using the best RMSD among the top 10 scoring poses as a metric, the success rate (RMSD â‰¤ 2.0 {\AA} for the interface backbone atoms) increased from 21{\%} with default Glide SP settings to 58{\%} with the enhanced peptide sampling and scoring protocol in the case of redocking to the native protein structure. This approaches the accuracy of the recently developed Rosetta FlexPepDock method (63{\%} success for these 19 peptides) while being over 100 times faster. Cross-docking was performed for a subset of cases where an unbound receptor structure was available, and in that case, 40{\%} of peptides were docked successfully. We analyze the results and find that the optimized polypeptide protocol is most accurate for extended peptides of limited size and number of formal charges, defining a domain of applicability for this approach.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Dubois, Paul F. and Hinsen, Konrad and Hugunin, James},
doi = {10.1063/1.4822400},
eprint = {arXiv:1011.1669v3},
file = {:C$\backslash$:/Users/Tulio/Downloads/10.1.1.476.2204.pdf:pdf},
isbn = {9788578110796},
issn = {08941866},
journal = {Computers in Physics},
number = {3},
pages = {262},
pmid = {25246403},
title = {{Numerical Python}},
url = {http://scitation.aip.org/content/aip/journal/cip/10/3/10.1063/1.4822400},
volume = {10},
year = {1996}
}
@book{JohnL.Hennessy2005,
address = {San Francisco},
annote = {Livro estudado nas disciplinas AOC-I e AOC-II.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {{John L. Hennessy}, David A. Patterson},
edition = {3},
editor = {Penrose, Denise E. M.},
file = {:C$\backslash$:/Users/Tulio/Downloads/[David{\_}A.{\_}Patterson,{\_}John{\_}L.{\_}Hennessy]{\_}Computer{\_}Or(b-ok.xyz).pdf:pdf},
isbn = {1-55860-604-1},
pages = {684},
publisher = {Morgan Kaufmann Publishers},
title = {{Computer Organization And Design - The Hardware Software Interface. Solutions}},
year = {2005}
}
@article{Goldberg1974,
annote = {Define o conceito de uma m{\'{a}}quina virtual. 

{\'{E}} de 1974, mas a teoria sobre o funcionamento de uma m{\'{a}}quina virtual n{\~{a}}o mudou desde ent{\~{a}}o.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Goldberg, Robert P},
doi = {10.1109/MC.1974.6323581},
file = {:C$\backslash$:/Users/Tulio/Downloads/06323581.pdf:pdf},
issn = {0018-9162},
journal = {Computer},
month = {jun},
number = {6},
pages = {34--45},
title = {{Survey of virtual machine research}},
url = {http://ieeexplore.ieee.org/document/6323581/},
volume = {7},
year = {1974}
}
@article{Rosenblum2004,
abstract = {The term "virtual machine" initially described a 1960s operating system concept: a software abstraction with the looks of a computer system's hardware (real machine). Forty years later, the term encompasses a large range of abstractions - for example, Java virtual machines that don't match an existing real machine. Despite the variations, in all definitions the virtual machine is a target for a programmer or compilation system. In other words, software is written to run on the virtual machine.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Rosenblum, Mendel},
doi = {10.1145/1016998.1017000},
file = {:C$\backslash$:/Users/Tulio/Downloads/rosenblum.pdf:pdf},
isbn = {1542-7730},
issn = {15427730},
journal = {Queue},
number = {5},
pages = {34},
title = {{The Reincarnation of Virtual Machines}},
url = {http://queue.acm.org/detail.cfm?id=1017000},
volume = {2},
year = {2004}
}
@article{Sanner1999,
abstract = {Over the last decade we have witnessed the emergence of technologies such as libraries, Object Orientation, software architecture and visual programming. The common goal of these technologies is to achieve software reuse. Even though, many significant advances have been made in areas such as library design, domain analysis, metric of reuse and organization for reuse, there are still unresolved problems such as component inter-operability and framework design[1]. We have investigated the use of interpreted languages to create a programmable, dynamic environment in which components can be tied together at a high level. This work has demonstrated the benefits of such an approach and has taught us about the features of the interpreted language that are key to a successful component integration.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Sanner, M F},
doi = {10.1016/S1093-3263(99)99999-0},
file = {:C$\backslash$:/Users/Tulio/Downloads/3f740518eafcfaadb054d9239009f3f34600.pdf:pdf},
isbn = {1093-3263},
issn = {1093-3263},
journal = {Journal of molecular graphics {\&} modelling},
month = {feb},
number = {1},
pages = {57--61},
pmid = {10660911},
title = {{Python: a programming language for software integration and development.}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1093326399999990 http://www.ncbi.nlm.nih.gov/pubmed/10660911},
volume = {17},
year = {1999}
}
@book{Tenembaum2004,
abstract = {Ajudando os leitores a formar estruturas de dados eficientes em C, este livro explica como aplicar as estruturas de dados para otimizar a execu{\c{c}}{\~{a}}o de programas. Com forte {\^{e}}nfase sobre o projeto estruturado e as t{\'{e}}cnicas de programa{\c{c}}{\~{a}}o, ele apresenta informa{\c{c}}{\~{o}}es precisas sobre todos os passos envolvidos no desenvolvimento de estruturas de dados, desde a concep{\c{c}}{\~{a}}o te{\'{o}}rica at{\'{e}} a realiza{\c{c}}{\~{a}}o concreta. Inclui - Diversas implementa{\c{c}}{\~{o}}es alternativas de estruturas de dados e conselhos sobre a escolha da estrutura mais adequada {\`{a}}s suas necessidades imediatas; In{\'{u}}meros exemplos de programa{\c{c}}{\~{a}}o depurados; Desenvolvimento completo de todos os programas; Representa{\c{c}}{\~{a}}o gr{\'{a}}fica do material; Algoritmos de classifica{\c{c}}{\~{a}}o e de busca; Descobertas de pesquisas recentes.},
address = {S{\~{a}}o Paulo},
annote = {Usar para citar o cap{\'{i}}tulo 2 sobre pilhas.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Tenembaum, A A and Langsam, Y and Augenstein, M J},
edition = {1},
editor = {Assump{\c{c}}{\~{a}}o, Milton},
file = {:C$\backslash$:/Users/Tulio/Downloads/[AARON{\_}TENENBAUM,{\_}YEDIDYAH{\_}LANGSAM,{\_}MOSHE{\_}J.{\_}AUGEN(b-ok.xyz).pdf:pdf},
isbn = {8534603480},
keywords = {C Language,Data Structures},
pages = {884},
publisher = {MAKRON},
title = {{Estruturas de Dados Usando C}},
year = {2004}
}
@book{Aho,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Aho, Alfredo V. and Hopcroft, John E. and Ullman, Jeffrey D.},
file = {:C$\backslash$:/Users/Tulio/Downloads/[A.{\_}V{\_}Aho,{\_}J.{\_}E.{\_}Hopcroft,{\_}J.{\_}D.{\_}Ullman]{\_}Data{\_}str(b-ok.xyz).pdf:pdf;:C$\backslash$:/Users/Tulio/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Aho, Hopcroft, Ullman - Unknown - Data Structures and Algorithms.pdf:pdf},
title = {{Data Structures and Algorithms}}
}
@article{Tsai2015,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Tsai, Chun-Jen and Kuo, Han-Wen and Lin, Zigang and Guo, Zi-Jing and Wang, Jun-Fu},
doi = {10.1145/2629649},
file = {:C$\backslash$:/Users/Tulio/Downloads/a35-tsai.pdf:pdf},
issn = {15399087},
journal = {ACM Transactions on Embedded Computing Systems},
month = {feb},
number = {2},
pages = {1--25},
title = {{A Java Processor IP Design for Embedded SoC}},
url = {http://dl.acm.org/citation.cfm?doid=2737797.2629649},
volume = {14},
year = {2015}
}
@book{Greibach1975,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {Greibach, SA},
booktitle = {Lecture Notes in Computer Science},
doi = {10.1007/3-540-68339-9_34},
eprint = {9780201398298},
file = {:C$\backslash$:/Users/Tulio/Downloads/2003{\_}Book{\_}OnTheMoveToMeaningfulInternetS.pdf:pdf},
isbn = {9783642242632},
issn = {03029743},
pmid = {4520227},
title = {{Lecture Notes in Computer Science}},
url = {http://www.ulb.tu-darmstadt.de/tocs/59142804.pdf},
year = {1975}
}
@inproceedings{Tsai2015a,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Tsai, Chun-Jen and Wu, Tsung-Han and Su, Hung-Cheng},
booktitle = {2015 IFIP/IEEE International Conference on Very Large Scale Integration (VLSI-SoC)},
doi = {10.1109/VLSI-SoC.2015.7314414},
file = {:C$\backslash$:/Users/Tulio/Downloads/07314414.pdf:pdf},
isbn = {978-1-4673-9140-5},
keywords = {-java},
month = {oct},
pages = {189--194},
publisher = {IEEE},
title = {{JAIP-MP: A four-core Java application processor}},
url = {https://www.scopus.com/inward/record.url?eid=2-s2.0-84960102080{\&}partnerID=40{\&}md5=47017c3b79ec1f9885c0eec423a1ed12 http://ieeexplore.ieee.org/document/7314414/},
volume = {2015-Octob},
year = {2015}
}
@article{Schoeberl2008,
abstract = {Architectural advancements in modern processor designs increase average performance with features such as pipelines, caches, branch prediction, and out-of-order execution. However, these features complicate worst-case execution time analysis and lead to very conservative estimates. JOP (Java Optimized Processor) tackles this problem from the architectural perspective - by introducing a processor architecture in which simpler and more accurate WCET analysis is more important than average case performance. This paper presents a Java processor designed for time-predictable execution of real-time tasks. JOP is the implementation of the Java virtual machine in hardware. JOP is intended for applications in embedded real-time systems and the primary implementation technology is in a field programmable gate array. This paper demonstrates that a hardware implementation of the Java virtual machine results in a small design for resource-constrained devices. {\textcopyright} 2007 Elsevier B.V. All rights reserved.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Schoeberl, Martin},
doi = {10.1016/j.sysarc.2007.06.001},
file = {:C$\backslash$:/Users/Tulio/Downloads/1-s2.0-S1383762107000963-main.pdf:pdf},
isbn = {1383-7621},
issn = {13837621},
journal = {Journal of Systems Architecture},
keywords = {Java processor,Real-time system,Time-predictable architecture},
month = {jan},
number = {1-2},
pages = {265--286},
title = {{A Java processor architecture for embedded real-time systems}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1383762107000963},
volume = {54},
year = {2008}
}
@inproceedings{Gruian2008,
address = {New York, New York, USA},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Gruian, Flavius and Westmijze, Mark},
booktitle = {Proceedings of the 2008 ACM symposium on Applied computing - SAC '08},
doi = {10.1145/1363686.1364037},
file = {:C$\backslash$:/Users/Tulio/Downloads/p1492-gruian.pdf:pdf},
isbn = {9781595937537},
keywords = {Bluespec,Java processor,VHDL,bluespec,embedded systems,java processor},
pages = {1492},
publisher = {ACM Press},
title = {{VHDL vs. Bluespec system verilog}},
url = {http://portal.acm.org/citation.cfm?doid=1363686.1364037},
year = {2008}
}
@article{OConnor1997,
annote = {Apresenta{\c{c}}{\~{a}}o do microprocessador picoJava-I.


Apresenta uma breve explica{\c{c}}{\~{a}}o sobre o funcionamento da m{\'{a}}quina virtual Java.

Ap{\'{o}}s, mostra uma explica{\c{c}}{\~{a}}o detalhada sobre a arquitetura proposta.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {O'Connor, J.M. and Tremblay, Marc},
doi = {10.1109/40.592314},
file = {:C$\backslash$:/Users/Tulio/Downloads/00592314.pdf:pdf},
issn = {02721732},
journal = {IEEE Micro},
keywords = {Computer architecture,Frequency,Hardware,Java,Java virtual machine,Microelectronics,Security,Sun,Virtual machining,Writing,byte codes,computer architecture,dynamic distribution,microarchitecture,microarchitecture trade-offs,performance,picoJava-I,program compilers,virtual machines},
number = {2},
pages = {45--53},
title = {{picoJava-I: the Java virtual machine in hardware}},
url = {http://ieeexplore.ieee.org/document/592314/},
volume = {17},
year = {1997}
}
@book{Nurmi2007,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Nurmi, Jari},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Jari{\_}Nurmi]{\_}Processor{\_}Design{\_}System-on-Chip{\_}Comp(b-ok.xyz).pdf:pdf},
isbn = {9781402055294},
pages = {525},
title = {{Processor Design System-On{\_}Chip Computing for ASICs and FPGAs}},
year = {2007}
}
@book{PythonLanguageReference,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Sheridan, Chris},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Chris{\_}Sheridan]{\_}The{\_}Python{\_}Language{\_}Reference{\_}Man(b-ok.xyz).pdf:pdf},
pages = {193},
publisher = {Lulu Press, Inc},
title = {{The Python Language Reference Manual}},
year = {2016}
}
@article{Rossum2008,
abstract = {If you do muchwork on computers, eventually you find that theres some task youd like to automate. For example, you may wish to perform a search-and-replace over a large number of text files, or rename and rearrange a bunch of photo files in a complicated way. Perhaps youd like to write a small custom database, or a specialized GUI application, or a simple game. If youre a professional software developer, you may have to work with several C/C++/Java libraries but find the usual write/compile/test/re-compile cycle is too slow. Perhaps youre writing a test suite for such a library and find writing the testing code a tedious task. Or maybe youve written a program that could use an extension language, and you dont want to design and implement a whole new language for your application.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Rossum, Guido Van and Drake, Fred L},
doi = {10.1111/j.1094-348X.2008.00203_7.x},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Guido{\_}van{\_}Rossum,{\_}Fred{\_}L.{\_}Drake,{\_}Jr.,{\_}(editor)]{\_}P(b-ok.xyz).pdf:pdf},
isbn = {9789004155008},
issn = {00264326},
journal = {Milton Quarterly},
month = {dec},
number = {4},
pages = {270--272},
title = {{PYTHON}},
url = {http://docs.python.org/tutorial/ http://doi.wiley.com/10.1111/j.1094-348X.2008.00203{\_}7.x},
volume = {42},
year = {2008}
}
@book{JohnL.Hennessy2002,
annote = {Livro de arquitetura de computadores utilizado nas disciplinas de AOC-I e AOC-II.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {{John L. Hennessy}, David A. Patterson},
edition = {3},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[John{\_}L.{\_}Hennessy,{\_}David{\_}A.{\_}Patterson]{\_}Computer{\_}Ar(b-ok.xyz).pdf:pdf},
isbn = {1558605967,9781558605961,9780080502526},
publisher = {Morgan Kaufmann},
title = {{Computer Architecture: A Quantitative Approach}},
year = {2002}
}
@book{Hutty1981,
address = {London},
annote = {Apresenta{\c{c}}{\~{a}}o sobre a linguagem Assembly do microprocessador Z80. 

Livro utilizado como base para a apresenta{\c{c}}{\~{a}}o de uma linguagem Assembly.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Hutty, Roger},
doi = {10.1007/978-1-349-06155-6},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[Roger{\_}Hutty{\_}(auth.)]{\_}Z80{\_}Assembly{\_}Language{\_}Progra(b-ok.xyz).pdf:pdf},
isbn = {978-0-333-32295-6},
publisher = {Macmillan Education UK},
title = {{Z80 Assembly Language Programming for Students}},
url = {http://link.springer.com/10.1007/978-1-349-06155-6},
year = {1981}
}
@book{Sweetman2006,
address = {San Francisco},
annote = {Apresenta{\c{c}}{\~{a}}o e detalhamento sobre o funcionamento do processador MIPS.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Sweetman, Dominic},
edition = {2},
editor = {Moore, Denise},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[Dominic{\_}Sweetman]{\_}See{\_}MIPS{\_}Run(b-ok.xyz).pdf:pdf},
isbn = {9780120884216,0120884216},
publisher = {Morgan Kaufmann},
title = {{See MIPS Run}},
year = {2006}
}
@book{Weber1998,
address = {Porto Alegre},
annote = {Apresenta{\c{c}}{\~{a}}o do processador hipot{\'{e}}tico Neander.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Weber, Raul Fernando},
edition = {2{\textordfeminine}},
isbn = {8524106352},
pages = {199},
publisher = {Sagra Luzzato},
title = {{Fundamentos de Arquitetura de Computadores}},
year = {1998}
}
@article{Myers1995,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Myers, Cory and Dreiling, Ray and Sanders, Lockheed},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/VHDL modeling for signal processor development.pdf:pdf},
pages = {2699--2702},
title = {{VHDL MODELING FOR SIGNAL PROCESSOR DEVELOPMENT}},
year = {1995}
}
@article{Rose1996,
abstract = {Successful multiprocessor system design for complex real-time embedded applications requires powerful and comprehensive, yet cost-effective, productive, and maintainable modeling. The multi-disciplinary, VHDL-based modeling library developed by the Honeywell Technology Center places heavy emphasis on multiprocessing and distributed communications. These models focus on detailed hardware performance analysis along with multiple abstraction levels for software representation and evaluation. This paper will detail the processor model which provides the key element for the coanalysis of hardware and software system architectures.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Rose, Fred and Carpenter, Todd and Kumar, Sanjaya and Shackleton, John and Steeves, Todd},
doi = {10.1109/HCS.1996.492231},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/A Model for the Coanalysis of Hardware and Software Architectures.pdf:pdf},
isbn = {0-8186-7243-9},
journal = {Hardware/Software Codesign - Proceedings of the International Workshop},
keywords = {Computer hardware;Computer hardware description la},
pages = {94--103},
title = {{Model for the coanalysis of hardware and software architectures}},
year = {1996}
}
@inproceedings{Milano2013,
abstract = {This paper presents a power system analysis tool, called DOME, entirely based on Python scripting language as well as on public domain efficient C and Fortran libraries. The objects of the paper are twofold. First, the paper discusses the features that makes the Python language an adequate tool for research, massive numerical simulations and education. Then the paper describes the architecture of the developed software tool and provides a variety of examples to show the advanced features and the performance of the developed tool.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Milano, Federico},
booktitle = {2013 IEEE Power {\&} Energy Society General Meeting},
doi = {10.1109/PESMG.2013.6672387},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Python/A Python-based Software Tool for Power System.pdf:pdf},
isbn = {978-1-4799-1303-9},
issn = {19449925},
keywords = {Python language,eigenvalue analysis,power flow analysis,scripting,time domain integration},
pages = {1--5},
publisher = {IEEE},
title = {{A python-based software tool for power system analysis}},
url = {http://ieeexplore.ieee.org/document/6672387/},
year = {2013}
}
@article{Bo2009,
abstract = {This paper presents an integrated modeling, simulation and analysis technique for high-speed serial link transceiver over band-limited channel. The Verilog-A behavioral modeling blocks, transistor-level circuits based on the BSIM models, and the backplane channel with .s4p format model were simulated simultaneously in Cadence Spectre environment. The output data were post-processed with Matlab for performance analysis. Compared with HDL-based modeling scheme and event-driven modeling method, the proposed modeling method provides the effective system level verification in the integrated environment, even with real transistor-level circuits included.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Bo, Wang and Dianyong, Chen and Bangli, Liang and Jinguang, Jiang and Tad, Kwasniewski},
doi = {10.1109/UKSIM.2009.30},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/Design and Implementation of a 64-bit RISC Processor using VHDL.pdf:pdf},
isbn = {9780769535937},
journal = {11th International Conference on Computer Modelling and Simulation, UKSim 2009},
keywords = {-risc,a scheme,bist,bit,exhaustive set of test,for meaningfully interpreting and,patterns is developed,test outputs is designed,the processor has been,understanding of the,vhdl},
pages = {574--578},
title = {{Modeling, simulation and analysis of high-speed serial link transceiver over band-limited channel}},
year = {2009}
}
@article{Buenzli1997,
abstract = {The RASSP performance modeling methodology was used to rapidly model and compare alternative hardware/software architectures for a scalable embedded radar signal processor based on COTS DSP boards. VHDL performance models were generated from graphical hardware and software architectures using Cosmos{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater}, simulated with QuickHDL{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater}, and analyzed with Cosmos. Results for a Mercury RACEway{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater} architecture are presented.},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Buenzli, Ch. and Owen, L and Rose, F},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/Hardware{\_}Software Codesign of a Scalable Embedded Radar Signal Processor.pdf:pdf},
isbn = {0818681802},
journal = {Proceedings of the VHDL International Users Forum Fall Conference, VIUF},
keywords = {Computer aided design;Computer hardware;Computer s},
pages = {200--208},
title = {{Hardware/software codesign of a scalable embedded radar signal processor}},
year = {1997}
}
@article{Gschwind1996,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Gschwind, Michael and Maurer, Dietmar},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/An Extendible MIPS{\_}I processor kernel in VHDL for hardware{\_}software co-design.pdf:pdf},
isbn = {0897918487},
title = {{An extendible MIPS â€“ I processor kernel in VHDL for hardware / software co-design}},
year = {1996}
}
@inproceedings{Reaz2002,
address = {Penang, Malaysia},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Reaz, MBI and Islam, M.S. and Sulaiman, M.S.},
booktitle = {ICONIP '02. Proceedings of the 9th International Conference on Neural Information Processing. Computational Intelligence for the E-Age (IEEE Cat. No.02EX575)},
doi = {10.1109/SMELEC.2002.1217806},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/A Single Clock Cycle MIPS RISC Processor Design using.pdf:pdf},
isbn = {0-7803-7578-5},
pages = {199--203},
publisher = {IEEE},
title = {{A single clock cycle MIPS RISC processor design using VHDL}},
url = {http://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=1217806 http://ieeexplore.ieee.org/document/1217806/},
year = {2002}
}
@article{Sandler2018,
annote = {Apresenta{\c{c}}{\~{a}}o das 14 linguagens de programa{\c{c}}{\~{a}}o mais populares em 2018, de acordo com um estudo feito com 100 mil desenvolvedores. 

A linguagem Python aparece na 7{\textordfeminine} posi{\c{c}}{\~{a}}o.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Sandler, Rachel},
journal = {Business Insider},
keywords = {python7},
title = {{The 14 most popular programming languages, according to a study of 100,000 developers}},
url = {https://www.businessinsider.com/14-most-popular-programming-languages-stack-overflow-developer-survey-2018-4},
year = {2018}
}
@misc{Python2017,
annote = {Explica{\c{c}}{\~{a}}o sobre cada instru{\c{c}}{\~{a}}o Python. 

Ensina brevemente a como fazer o disassembler de um algoritmo Python e mostra o que cada instru{\c{c}}{\~{a}}o assembly faz na pr{\'{a}}tica.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Python},
keywords = {bytecode,python},
title = {{31.12. dis - Disassembler for Python bytecode}},
url = {https://docs.python.org/3.3/library/dis.html},
urldate = {2018-08-18},
year = {2017}
}
@book{quartusIntel,
address = {Upper Saddle River, NJ, USA},
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Kleitz, William},
isbn = {0131714902},
publisher = {Prentice-Hall, Inc.},
title = {{Digital Electronics with VHDL (Quartus II Version)}},
year = {2005}
}
@misc{pythonMachine,
annote = {Explica{\c{c}}{\~{a}}o simplificada sobre o funcionamento b{\'{a}}sico da m{\'{a}}quina virtual Python.

Apresenta exemplos sobre execu{\c{c}}{\~{o}}es de diversas instru{\c{c}}{\~{o}}es em Assembly Python e referencia para arquivos/documentos mais completos sobre o funcionamento da implementa{\c{c}}{\~{a}}o.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Gallardo, Brayan Rafael},
booktitle = {Python Virtual Machine},
title = {{Executing Code in The Python Virtual Machine}},
url = {https://www.ics.uci.edu/{~}brgallar/week9{\_}3.html},
year = {2016}
}
@misc{designCompiler,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Cannon, Brett},
booktitle = {PEP 339 -- Design of the CPython Compiler | Python.org},
title = {{Design of the CPython Compiler}},
url = {https://www.python.org/dev/peps/pep-0339/},
year = {2005}
}
@book{insidePVM,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Ike-Nwosu, Obi},
publisher = {Lean Publishing},
title = {{Inside the Python Virtual Machine}},
url = {https://leanpub.com/insidethepythonvirtualmachine/read{\#}fnref-trav},
year = {2015}
}
@article{javaMachine,
annote = {Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Lindholm, Tim and Yellin, Frank and Bracha, Gilad and Buckley, Alex},
journal = {The Java Virtual Machine Specification},
publisher = {Oracle America, Inc},
title = {{The Java Virtual Machine Specification}},
url = {https://docs.oracle.com/javase/specs/jvms/se10/jvms10.pdf},
year = {2018}
}
@article{quartus2018,
annote = {Apresenta os pontos fortes de realizar an{\'{a}}lises atrav{\'{e}}s da ferramenta Quartus, que pertence {\`{a}} Intel. Mostra que {\'{e}} poss{\'{i}}vel otimizar arquiteturas baseando-se em resultados gerados pelas an{\'{a}}lises feitas.

Cita{\c{c}}{\~{a}}o mostrando que as opera{\c{c}}{\~{o}}es aritm{\'{e}}ticas s{\~{a}}o consideradas opera{\c{c}}{\~{o}}es bin{\'{a}}rias em Python por possuirem dois operandos.},
author = {Intel},
journal = {Power Analysis and Optimization User Guide Intel Quartus Prime Pro Edition},
month = {jun},
title = {{Power Analysis and Optimization User Guide Intel Quartus Prime Pro Edition}},
url = {https://www.intel.com/content/dam/altera-www/global/en{\_}US/pdfs/literature/ug/ug-qpp-power.pdf},
volume = {18},
year = {2018}
}
