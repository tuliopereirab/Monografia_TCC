@book{Watters1996,
address = {New York, New York, USA},
annote = {Utilizado para a sita{\c{c}}{\~{a}}o do Python possuir grande portabilidade.},
author = {Watters, Aaron and Ahlstrom, James C. and Rossum, Guido Van},
isbn = {1558514848},
publisher = {Henry Holt and Co., Inc.},
title = {{Internet Programming With Python}},
year = {1996}
}
@book{JohnL.Hennessy2005,
address = {San Francisco},
annote = {Livro estudado nas disciplinas AOC-I e AOC-II.},
author = {{John L. Hennessy}, David A. Patterson},
edition = {3},
editor = {Penrose, Denise E. M.},
file = {:C$\backslash$:/Users/Tulio/Downloads/[David{\_}A.{\_}Patterson,{\_}John{\_}L.{\_}Hennessy]{\_}Computer{\_}Or(b-ok.xyz).pdf:pdf},
isbn = {1-55860-604-1},
pages = {684},
publisher = {Morgan Kaufmann Publishers},
title = {{Computer Organization And Design - The Hardware Software Interface. Solutions}},
year = {2005}
}
@article{Goldberg1974,
annote = {Define o conceito de uma m{\'{a}}quina virtual. 

{\'{E}} de 1974, mas a teoria sobre o funcionamento de uma m{\'{a}}quina virtual n{\~{a}}o mudou desde ent{\~{a}}o.},
author = {Goldberg, Robert P},
doi = {10.1109/MC.1974.6323581},
file = {:C$\backslash$:/Users/Tulio/Downloads/06323581.pdf:pdf},
issn = {0018-9162},
journal = {Computer},
month = {jun},
number = {6},
pages = {34--45},
title = {{Survey of virtual machine research}},
url = {http://ieeexplore.ieee.org/document/6323581/},
volume = {7},
year = {1974}
}
@article{Rosenblum2004,
abstract = {The term "virtual machine" initially described a 1960s operating system concept: a software abstraction with the looks of a computer system's hardware (real machine). Forty years later, the term encompasses a large range of abstractions - for example, Java virtual machines that don't match an existing real machine. Despite the variations, in all definitions the virtual machine is a target for a programmer or compilation system. In other words, software is written to run on the virtual machine.},
author = {Rosenblum, Mendel},
doi = {10.1145/1016998.1017000},
file = {:C$\backslash$:/Users/Tulio/Downloads/rosenblum.pdf:pdf},
isbn = {1542-7730},
issn = {15427730},
journal = {Queue},
number = {5},
pages = {34},
title = {{The Reincarnation of Virtual Machines}},
url = {http://queue.acm.org/detail.cfm?id=1017000},
volume = {2},
year = {2004}
}
@article{Sanner1999,
abstract = {Over the last decade we have witnessed the emergence of technologies such as libraries, Object Orientation, software architecture and visual programming. The common goal of these technologies is to achieve software reuse. Even though, many significant advances have been made in areas such as library design, domain analysis, metric of reuse and organization for reuse, there are still unresolved problems such as component inter-operability and framework design[1]. We have investigated the use of interpreted languages to create a programmable, dynamic environment in which components can be tied together at a high level. This work has demonstrated the benefits of such an approach and has taught us about the features of the interpreted language that are key to a successful component integration.},
author = {Sanner, M F},
doi = {10.1016/S1093-3263(99)99999-0},
file = {:C$\backslash$:/Users/Tulio/Downloads/3f740518eafcfaadb054d9239009f3f34600.pdf:pdf},
isbn = {1093-3263},
issn = {1093-3263},
journal = {Journal of molecular graphics {\&} modelling},
month = {feb},
number = {1},
pages = {57--61},
pmid = {10660911},
title = {{Python: a programming language for software integration and development.}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1093326399999990 http://www.ncbi.nlm.nih.gov/pubmed/10660911},
volume = {17},
year = {1999}
}
@book{Tenembaum2004,
abstract = {Ajudando os leitores a formar estruturas de dados eficientes em C, este livro explica como aplicar as estruturas de dados para otimizar a execu{\c{c}}{\~{a}}o de programas. Com forte {\^{e}}nfase sobre o projeto estruturado e as t{\'{e}}cnicas de programa{\c{c}}{\~{a}}o, ele apresenta informa{\c{c}}{\~{o}}es precisas sobre todos os passos envolvidos no desenvolvimento de estruturas de dados, desde a concep{\c{c}}{\~{a}}o te{\'{o}}rica at{\'{e}} a realiza{\c{c}}{\~{a}}o concreta. Inclui - Diversas implementa{\c{c}}{\~{o}}es alternativas de estruturas de dados e conselhos sobre a escolha da estrutura mais adequada {\`{a}}s suas necessidades imediatas; In{\'{u}}meros exemplos de programa{\c{c}}{\~{a}}o depurados; Desenvolvimento completo de todos os programas; Representa{\c{c}}{\~{a}}o gr{\'{a}}fica do material; Algoritmos de classifica{\c{c}}{\~{a}}o e de busca; Descobertas de pesquisas recentes.},
address = {S{\~{a}}o Paulo},
annote = {Usar para citar o cap{\'{i}}tulo 2 sobre pilhas.},
author = {Tenembaum, A A and Langsam, Y and Augenstein, M J},
edition = {1},
editor = {Assump{\c{c}}{\~{a}}o, Milton},
file = {:C$\backslash$:/Users/Tulio/Downloads/[AARON{\_}TENENBAUM,{\_}YEDIDYAH{\_}LANGSAM,{\_}MOSHE{\_}J.{\_}AUGEN(b-ok.xyz).pdf:pdf},
isbn = {8534603480},
keywords = {C Language,Data Structures},
pages = {884},
publisher = {MAKRON},
title = {{Estruturas de Dados Usando C}},
year = {2004}
}
@book{Aho,
author = {Aho, Alfredo V. and Hopcroft, John E. and Ullman, Jeffrey D.},
file = {:C$\backslash$:/Users/Tulio/Downloads/[A.{\_}V{\_}Aho,{\_}J.{\_}E.{\_}Hopcroft,{\_}J.{\_}D.{\_}Ullman]{\_}Data{\_}str(b-ok.xyz).pdf:pdf;:C$\backslash$:/Users/Tulio/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Aho, Hopcroft, Ullman - Unknown - Data Structures and Algorithms.pdf:pdf},
title = {{Data Structures and Algorithms}}
}
@article{Tsai2015,
author = {Tsai, Chun-Jen and Kuo, Han-Wen and Lin, Zigang and Guo, Zi-Jing and Wang, Jun-Fu},
doi = {10.1145/2629649},
file = {:C$\backslash$:/Users/Tulio/Downloads/a35-tsai.pdf:pdf},
issn = {15399087},
journal = {ACM Transactions on Embedded Computing Systems},
month = {feb},
number = {2},
pages = {1--25},
title = {{A Java Processor IP Design for Embedded SoC}},
url = {http://dl.acm.org/citation.cfm?doid=2737797.2629649},
volume = {14},
year = {2015}
}
@book{Greibach1975,
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {Greibach, SA},
booktitle = {Lecture Notes in Computer Science},
doi = {10.1007/3-540-68339-9_34},
eprint = {9780201398298},
file = {:C$\backslash$:/Users/Tulio/Downloads/2003{\_}Book{\_}OnTheMoveToMeaningfulInternetS.pdf:pdf},
isbn = {9783642242632},
issn = {03029743},
pmid = {4520227},
title = {{Lecture Notes in Computer Science}},
url = {http://www.ulb.tu-darmstadt.de/tocs/59142804.pdf},
year = {1975}
}
@inproceedings{Tsai2015a,
author = {Tsai, Chun-Jen and Wu, Tsung-Han and Su, Hung-Cheng},
booktitle = {2015 IFIP/IEEE International Conference on Very Large Scale Integration (VLSI-SoC)},
doi = {10.1109/VLSI-SoC.2015.7314414},
file = {:C$\backslash$:/Users/Tulio/Downloads/07314414.pdf:pdf},
isbn = {978-1-4673-9140-5},
keywords = {-java},
month = {oct},
pages = {189--194},
publisher = {IEEE},
title = {{JAIP-MP: A four-core Java application processor}},
url = {https://www.scopus.com/inward/record.url?eid=2-s2.0-84960102080{\&}partnerID=40{\&}md5=47017c3b79ec1f9885c0eec423a1ed12 http://ieeexplore.ieee.org/document/7314414/},
volume = {2015-Octob},
year = {2015}
}
@article{Schoeberl2008,
abstract = {Architectural advancements in modern processor designs increase average performance with features such as pipelines, caches, branch prediction, and out-of-order execution. However, these features complicate worst-case execution time analysis and lead to very conservative estimates. JOP (Java Optimized Processor) tackles this problem from the architectural perspective - by introducing a processor architecture in which simpler and more accurate WCET analysis is more important than average case performance. This paper presents a Java processor designed for time-predictable execution of real-time tasks. JOP is the implementation of the Java virtual machine in hardware. JOP is intended for applications in embedded real-time systems and the primary implementation technology is in a field programmable gate array. This paper demonstrates that a hardware implementation of the Java virtual machine results in a small design for resource-constrained devices. {\textcopyright} 2007 Elsevier B.V. All rights reserved.},
author = {Schoeberl, Martin},
doi = {10.1016/j.sysarc.2007.06.001},
file = {:C$\backslash$:/Users/Tulio/Downloads/1-s2.0-S1383762107000963-main.pdf:pdf},
isbn = {1383-7621},
issn = {13837621},
journal = {Journal of Systems Architecture},
keywords = {Java processor,Real-time system,Time-predictable architecture},
month = {jan},
number = {1-2},
pages = {265--286},
title = {{A Java processor architecture for embedded real-time systems}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1383762107000963},
volume = {54},
year = {2008}
}
@inproceedings{Gruian2008,
address = {New York, New York, USA},
author = {Gruian, Flavius and Westmijze, Mark},
booktitle = {Proceedings of the 2008 ACM symposium on Applied computing - SAC '08},
doi = {10.1145/1363686.1364037},
file = {:C$\backslash$:/Users/Tulio/Downloads/p1492-gruian.pdf:pdf},
isbn = {9781595937537},
keywords = {Bluespec,Java processor,VHDL,bluespec,embedded systems,java processor},
pages = {1492},
publisher = {ACM Press},
title = {{VHDL vs. Bluespec system verilog}},
url = {http://portal.acm.org/citation.cfm?doid=1363686.1364037},
year = {2008}
}
@article{OConnor1997,
annote = {Apresenta{\c{c}}{\~{a}}o do microprocessador picoJava-I.


Apresenta uma breve explica{\c{c}}{\~{a}}o sobre o funcionamento da m{\'{a}}quina virtual Java.

Ap{\'{o}}s, mostra uma explica{\c{c}}{\~{a}}o detalhada sobre a arquitetura proposta.},
author = {O'Connor, J.M. and Tremblay, Marc},
doi = {10.1109/40.592314},
file = {:C$\backslash$:/Users/Tulio/Downloads/00592314.pdf:pdf},
issn = {02721732},
journal = {IEEE Micro},
keywords = {Computer architecture,Frequency,Hardware,Java,Java virtual machine,Microelectronics,Security,Sun,Virtual machining,Writing,byte codes,computer architecture,dynamic distribution,microarchitecture,microarchitecture trade-offs,performance,picoJava-I,program compilers,virtual machines},
number = {2},
pages = {45--53},
title = {{picoJava-I: the Java virtual machine in hardware}},
url = {http://ieeexplore.ieee.org/document/592314/},
volume = {17},
year = {1997}
}
@book{Nurmi2007,
author = {Nurmi, Jari},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Jari{\_}Nurmi]{\_}Processor{\_}Design{\_}System-on-Chip{\_}Comp(b-ok.xyz).pdf:pdf},
isbn = {9781402055294},
pages = {525},
title = {{Processor Design System-On{\_}Chip Computing for ASICs and FPGAs}},
year = {2007}
}
@book{PythonLanguageReference,
author = {Sheridan, Chris},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Chris{\_}Sheridan]{\_}The{\_}Python{\_}Language{\_}Reference{\_}Man(b-ok.xyz).pdf:pdf},
pages = {193},
publisher = {Lulu Press, Inc},
title = {{The Python Language Reference Manual}},
year = {2016}
}
@article{Rossum2008,
abstract = {If you do muchwork on computers, eventually you find that theres some task youd like to automate. For example, you may wish to perform a search-and-replace over a large number of text files, or rename and rearrange a bunch of photo files in a complicated way. Perhaps youd like to write a small custom database, or a specialized GUI application, or a simple game. If youre a professional software developer, you may have to work with several C/C++/Java libraries but find the usual write/compile/test/re-compile cycle is too slow. Perhaps youre writing a test suite for such a library and find writing the testing code a tedious task. Or maybe youve written a program that could use an extension language, and you dont want to design and implement a whole new language for your application.},
author = {Rossum, Guido Van and Drake, Fred L},
doi = {10.1111/j.1094-348X.2008.00203_7.x},
file = {:C$\backslash$:/Users/Tulio/Downloads/[Guido{\_}van{\_}Rossum,{\_}Fred{\_}L.{\_}Drake,{\_}Jr.,{\_}(editor)]{\_}P(b-ok.xyz).pdf:pdf},
isbn = {9789004155008},
issn = {00264326},
journal = {Milton Quarterly},
month = {dec},
number = {4},
pages = {270--272},
title = {{PYTHON}},
url = {http://docs.python.org/tutorial/ http://doi.wiley.com/10.1111/j.1094-348X.2008.00203{\_}7.x},
volume = {42},
year = {2008}
}
@book{JohnL.Hennessy2002,
annote = {Livro de arquitetura de computadores utilizado nas disciplinas de AOC-I e AOC-II.},
author = {{John L. Hennessy}, David A. Patterson},
edition = {3},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[John{\_}L.{\_}Hennessy,{\_}David{\_}A.{\_}Patterson]{\_}Computer{\_}Ar(b-ok.xyz).pdf:pdf},
isbn = {1558605967,9781558605961,9780080502526},
publisher = {Morgan Kaufmann},
title = {{Computer Architecture: A Quantitative Approach}},
year = {2002}
}
@book{Hutty1981,
address = {London},
annote = {Apresenta{\c{c}}{\~{a}}o sobre a linguagem Assembly do microprocessador Z80. 

Livro utilizado como base para a apresenta{\c{c}}{\~{a}}o de uma linguagem Assembly.},
author = {Hutty, Roger},
doi = {10.1007/978-1-349-06155-6},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[Roger{\_}Hutty{\_}(auth.)]{\_}Z80{\_}Assembly{\_}Language{\_}Progra(b-ok.xyz).pdf:pdf},
isbn = {978-0-333-32295-6},
publisher = {Macmillan Education UK},
title = {{Z80 Assembly Language Programming for Students}},
url = {http://link.springer.com/10.1007/978-1-349-06155-6},
year = {1981}
}
@book{Sweetman2006,
address = {San Francisco},
annote = {Apresenta{\c{c}}{\~{a}}o e detalhamento sobre o funcionamento do processador MIPS.},
author = {Sweetman, Dominic},
edition = {2},
editor = {Moore, Denise},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Outros/[Dominic{\_}Sweetman]{\_}See{\_}MIPS{\_}Run(b-ok.xyz).pdf:pdf},
isbn = {9780120884216,0120884216},
publisher = {Morgan Kaufmann},
title = {{See MIPS Run}},
year = {2006}
}
@book{Weber1998,
address = {Porto Alegre},
annote = {Apresenta{\c{c}}{\~{a}}o do processador hipot{\'{e}}tico Neander.},
author = {Weber, Raul Fernando},
edition = {2{\textordfeminine}},
isbn = {8524106352},
pages = {199},
publisher = {Sagra Luzzato},
title = {{Fundamentos de Arquitetura de Computadores}},
year = {1998}
}
@article{Myers1995,
author = {Myers, Cory and Dreiling, Ray and Sanders, Lockheed},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/VHDL modeling for signal processor development.pdf:pdf},
pages = {2699--2702},
title = {{VHDL MODELING FOR SIGNAL PROCESSOR DEVELOPMENT}},
year = {1995}
}
@article{Rose1996,
abstract = {Successful multiprocessor system design for complex real-time embedded applications requires powerful and comprehensive, yet cost-effective, productive, and maintainable modeling. The multi-disciplinary, VHDL-based modeling library developed by the Honeywell Technology Center places heavy emphasis on multiprocessing and distributed communications. These models focus on detailed hardware performance analysis along with multiple abstraction levels for software representation and evaluation. This paper will detail the processor model which provides the key element for the coanalysis of hardware and software system architectures.},
author = {Rose, Fred and Carpenter, Todd and Kumar, Sanjaya and Shackleton, John and Steeves, Todd},
doi = {10.1109/HCS.1996.492231},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/A Model for the Coanalysis of Hardware and Software Architectures.pdf:pdf},
isbn = {0-8186-7243-9},
journal = {Hardware/Software Codesign - Proceedings of the International Workshop},
keywords = {Computer hardware;Computer hardware description la},
pages = {94--103},
title = {{Model for the coanalysis of hardware and software architectures}},
year = {1996}
}
@inproceedings{Milano2013,
abstract = {This paper presents a power system analysis tool, called DOME, entirely based on Python scripting language as well as on public domain efficient C and Fortran libraries. The objects of the paper are twofold. First, the paper discusses the features that makes the Python language an adequate tool for research, massive numerical simulations and education. Then the paper describes the architecture of the developed software tool and provides a variety of examples to show the advanced features and the performance of the developed tool.},
author = {Milano, Federico},
booktitle = {2013 IEEE Power {\&} Energy Society General Meeting},
doi = {10.1109/PESMG.2013.6672387},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Python/A Python-based Software Tool for Power System.pdf:pdf},
isbn = {978-1-4799-1303-9},
issn = {19449925},
keywords = {Python language,eigenvalue analysis,power flow analysis,scripting,time domain integration},
pages = {1--5},
publisher = {IEEE},
title = {{A python-based software tool for power system analysis}},
url = {http://ieeexplore.ieee.org/document/6672387/},
year = {2013}
}
@article{Bo2009,
abstract = {This paper presents an integrated modeling, simulation and analysis technique for high-speed serial link transceiver over band-limited channel. The Verilog-A behavioral modeling blocks, transistor-level circuits based on the BSIM models, and the backplane channel with .s4p format model were simulated simultaneously in Cadence Spectre environment. The output data were post-processed with Matlab for performance analysis. Compared with HDL-based modeling scheme and event-driven modeling method, the proposed modeling method provides the effective system level verification in the integrated environment, even with real transistor-level circuits included.},
author = {Bo, Wang and Dianyong, Chen and Bangli, Liang and Jinguang, Jiang and Tad, Kwasniewski},
doi = {10.1109/UKSIM.2009.30},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/Design and Implementation of a 64-bit RISC Processor using VHDL.pdf:pdf},
isbn = {9780769535937},
journal = {11th International Conference on Computer Modelling and Simulation, UKSim 2009},
keywords = {-risc,a scheme,bist,bit,exhaustive set of test,for meaningfully interpreting and,patterns is developed,test outputs is designed,the processor has been,understanding of the,vhdl},
pages = {574--578},
title = {{Modeling, simulation and analysis of high-speed serial link transceiver over band-limited channel}},
year = {2009}
}
@article{Buenzli1997,
abstract = {The RASSP performance modeling methodology was used to rapidly model and compare alternative hardware/software architectures for a scalable embedded radar signal processor based on COTS DSP boards. VHDL performance models were generated from graphical hardware and software architectures using Cosmos{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater}, simulated with QuickHDL{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater}, and analyzed with Cosmos. Results for a Mercury RACEway{\textless}sup{\textgreater}TM{\textless}/sup{\textgreater} architecture are presented.},
author = {Buenzli, Ch. and Owen, L and Rose, F},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/Hardware{\_}Software Codesign of a Scalable Embedded Radar Signal Processor.pdf:pdf},
isbn = {0818681802},
journal = {Proceedings of the VHDL International Users Forum Fall Conference, VIUF},
keywords = {Computer aided design;Computer hardware;Computer s},
pages = {200--208},
title = {{Hardware/software codesign of a scalable embedded radar signal processor}},
year = {1997}
}
@article{Gschwind1996,
author = {Gschwind, Michael and Maurer, Dietmar},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/An Extendible MIPS{\_}I processor kernel in VHDL for hardware{\_}software co-design.pdf:pdf},
isbn = {0897918487},
title = {{An extendible MIPS – I processor kernel in VHDL for hardware / software co-design}},
year = {1996}
}
@inproceedings{Reaz2002,
address = {Penang, Malaysia},
author = {Reaz, MBI and Islam, M.S. and Sulaiman, M.S.},
booktitle = {ICONIP '02. Proceedings of the 9th International Conference on Neural Information Processing. Computational Intelligence for the E-Age (IEEE Cat. No.02EX575)},
doi = {10.1109/SMELEC.2002.1217806},
file = {:C$\backslash$:/Users/Tulio/Google Drive/UNIPAMPA/TCC/Leituras/Processor/A Single Clock Cycle MIPS RISC Processor Design using.pdf:pdf},
isbn = {0-7803-7578-5},
pages = {199--203},
publisher = {IEEE},
title = {{A single clock cycle MIPS RISC processor design using VHDL}},
url = {http://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=1217806 http://ieeexplore.ieee.org/document/1217806/},
year = {2002}
}
@article{Sandler2018,
annote = {Apresenta{\c{c}}{\~{a}}o das 14 linguagens de programa{\c{c}}{\~{a}}o mais populares em 2018, de acordo com um estudo feito com 100 mil desenvolvedores. 

A linguagem Python aparece na 7{\textordfeminine} posi{\c{c}}{\~{a}}o.},
author = {Sandler, Rachel},
journal = {Business Insider},
keywords = {python7},
title = {{The 14 most popular programming languages, according to a study of 100,000 developers}},
url = {https://www.businessinsider.com/14-most-popular-programming-languages-stack-overflow-developer-survey-2018-4},
year = {2018}
}
@misc{Python2017,
annote = {Explica{\c{c}}{\~{a}}o sobre cada instru{\c{c}}{\~{a}}o Python. 

Ensina brevemente a como fazer o disassembler de um algoritmo Python e mostra o que cada instru{\c{c}}{\~{a}}o assembly faz na pr{\'{a}}tica.},
author = {Python},
keywords = {bytecode,python},
title = {{31.12. dis - Disassembler for Python bytecode}},
url = {https://docs.python.org/3.3/library/dis.html},
urldate = {2018-08-18},
year = {2017}
}
@book{quartusIntel,
address = {Upper Saddle River, NJ, USA},
author = {Kleitz, William},
isbn = {0131714902},
publisher = {Prentice-Hall, Inc.},
title = {{Digital Electronics with VHDL (Quartus II Version)}},
year = {2005}
}
@misc{pythonMachine,
annote = {Explica{\c{c}}{\~{a}}o simplificada sobre o funcionamento b{\'{a}}sico da m{\'{a}}quina virtual Python.

Apresenta exemplos sobre execu{\c{c}}{\~{o}}es de diversas instru{\c{c}}{\~{o}}es em Assembly Python e referencia para arquivos/documentos mais completos sobre o funcionamento da implementa{\c{c}}{\~{a}}o.},
author = {Gallardo, Brayan Rafael},
booktitle = {Python Virtual Machine},
title = {{Executing Code in The Python Virtual Machine}},
url = {https://www.ics.uci.edu/{~}brgallar/week9{\_}3.html},
year = {2016}
}
@misc{designCompiler,
author = {Cannon, Brett},
booktitle = {PEP 339 -- Design of the CPython Compiler | Python.org},
title = {{Design of the CPython Compiler}},
url = {https://www.python.org/dev/peps/pep-0339/},
year = {2005}
}
@book{insidePVM,
author = {Ike-Nwosu, Obi},
publisher = {Lean Publishing},
title = {{Inside the Python Virtual Machine}},
url = {https://leanpub.com/insidethepythonvirtualmachine/read{\#}fnref-trav},
year = {2015}
}
@article{javaMachine,
author = {Lindholm, Tim and Yellin, Frank and Bracha, Gilad and Buckley, Alex},
journal = {The Java Virtual Machine Specification},
publisher = {Oracle America, Inc},
title = {{The Java Virtual Machine Specification}},
url = {https://docs.oracle.com/javase/specs/jvms/se10/jvms10.pdf},
year = {2018}
}
@article{quartus2018,
annote = {Apresenta os pontos fortes de realizar an{\'{a}}lises atrav{\'{e}}s da ferramenta Quartus, que pertence {\`{a}} Intel. Mostra que {\'{e}} poss{\'{i}}vel otimizar arquiteturas baseando-se em resultados gerados pelas an{\'{a}}lises feitas.},
author = {Intel},
journal = {Power Analysis and Optimization User Guide Intel Quartus Prime Pro Edition},
month = {jun},
title = {{Power Analysis and Optimization User Guide Intel Quartus Prime Pro Edition}},
url = {https://www.intel.com/content/dam/altera-www/global/en{\_}US/pdfs/literature/ug/ug-qpp-power.pdf},
volume = {18},
year = {2018}
}
